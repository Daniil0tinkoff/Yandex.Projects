Задания
В самостоятельном проекте вам нужно проанализировать данные о фондах и инвестициях и написать запросы к базе. Задания будут постепенно усложняться, но всё необходимое для их выполнения: операторы, функции, методы работы с базой — вы уже изучили на курсе. К каждому заданию будет небольшая подсказка: она направит вас в нужную сторону, но подробного плана действий не предложит.

Задача 1

Посчитайте, сколько компаний закрылось.

SELECT COUNT(status)

FROM company
WHERE status = 'closed'

--------------------------------------------------------------------------------------------------------------------------------------------
Задача 2

Отобразите количество привлечённых средств для новостных компаний США. Используйте данные из таблицы company. Отсортируйте таблицу по убыванию значений в поле funding_total .

SELECT funding_total

FROM company AS c

WHERE category_code  = 'news' 
      AND country_code = 'USA'
      
ORDER BY funding_total DESC

--------------------------------------------------------------------------------------------------------------------------------------------
Задача 3

Найдите общую сумму сделок по покупке одних компаний другими в долларах. Отберите сделки, которые осуществлялись только за наличные с 2011 по 2013 год включительно.

WITH
b AS (SELECT SUM(a.price_amount)

FROM acquisition AS a


WHERE term_code = 'cash' 
      AND (EXTRACT (YEAR FROM acquired_at) = 2011
           OR EXTRACT (YEAR FROM acquired_at) = 2012
           OR EXTRACT (YEAR FROM acquired_at) = 2013)
           
GROUP BY EXTRACT (YEAR FROM acquired_at))

SELECT SUM(b.sum)

FROM b

--------------------------------------------------------------------------------------------------------------------------------------------
Задача 4

Отобразите имя, фамилию и названия аккаунтов людей в твиттере, у которых названия аккаунтов начинаются на 'Silver'.

SELECT first_name,
       last_name,
       twitter_username
       
FROM people

WHERE twitter_username LIKE 'Silver%'
--------------------------------------------------------------------------------------------------------------------------------------------
Задача 5

Выведите на экран всю информацию о людях, у которых названия аккаунтов в твиттере содержат подстроку 'money', а фамилия начинается на 'K'.

SELECT *

FROM people

WHERE twitter_username LIKE '%_money%'
      AND last_name LIKE '%K%'
--------------------------------------------------------------------------------------------------------------------------------------------
Задача 6

Для каждой страны отобразите общую сумму привлечённых инвестиций, которые получили компании, зарегистрированные в этой стране. Страну, в которой зарегистрирована компания, можно определить по коду страны. Отсортируйте данные по убыванию суммы.

SELECT SUM(c.funding_total),
        c.country_code

FROM company AS c
GROUP BY c.country_code
ORDER BY SUM(c.funding_total) DESC
--------------------------------------------------------------------------------------------------------------------------------------------
Задача 7

Составьте таблицу, в которую войдёт дата проведения раунда, а также минимальное и максимальное значения суммы инвестиций, привлечённых в эту дату.
Оставьте в итоговой таблице только те записи, в которых минимальное значение суммы инвестиций не равно нулю и не равно максимальному значению.

SELECT funded_at,
       MIN(raised_amount) AS mina,
       MAX(raised_amount) AS maxa

FROM funding_round 
GROUP BY funded_at

HAVING     MIN(raised_amount) != 0 AND MIN(raised_amount) != MAX(raised_amount)
--------------------------------------------------------------------------------------------------------------------------------------------
Задача 8

Создайте поле с категориями:
Для фондов, которые инвестируют в 100 и более компаний, назначьте категорию high_activity.
Для фондов, которые инвестируют в 20 и более компаний до 100, назначьте категорию middle_activity.
Если количество инвестируемых компаний фонда не достигает 20, назначьте категорию low_activity.
Отобразите все поля таблицы fund и новое поле с категориями.

SELECT *,
        CASE 
            WHEN invested_companies >= 100 THEN 'high_activity'
            WHEN invested_companies >= 20 AND invested_companies < 100 THEN 'middle_activity'
            WHEN invested_companies < 20 THEN 'low_activity'
        END

FROM fund
--------------------------------------------------------------------------------------------------------------------------------------------
Задача 9

Для каждой из категорий, назначенных в предыдущем задании, посчитайте округлённое до ближайшего целого числа среднее количество инвестиционных раундов, в которых фонд принимал участие. Выведите на экран категории и среднее число инвестиционных раундов. Отсортируйте таблицу по возрастанию среднего.

SELECT 
       CASE
           WHEN invested_companies>=100 THEN 'high_activity'
           WHEN invested_companies>=20 THEN 'middle_activity'
           ELSE 'low_activity'
       END AS activity,
       ROUND(AVG(investment_rounds))
FROM fund
GROUP BY activity
ORDER BY AVG(investment_rounds)
--------------------------------------------------------------------------------------------------------------------------------------------
Задача 10

Выгрузите таблицу с десятью самыми активными инвестирующими странами. Активность страны определите по среднему количеству компаний, в которые инвестируют фонды этой страны.
Для каждой страны посчитайте минимальное, максимальное и среднее число компаний, в которые инвестировали фонды, основанные с 2010 по 2012 год включительно.
Исключите из таблицы страны с фондами, у которых минимальное число компаний, получивших инвестиции, равно нулю. Отсортируйте таблицу по среднему количеству компаний от большего к меньшему.
Для фильтрации диапазона по годам используйте оператор BETWEEN.

SELECT country_code,
                  MIN(invested_companies),
                  MAX(invested_companies),
                  AVG(invested_companies)
           
           FROM fund
           
           WHERE EXTRACT ( YEAR FROM founded_at) BETWEEN '2010' AND '2012'
           
           GROUP BY country_code
           HAVING MIN(invested_companies) !=0
           ORDER BY AVG(invested_companies) DESC
           LIMIT 10;
--------------------------------------------------------------------------------------------------------------------------------------------
Задача 11

Отобразите имя и фамилию всех сотрудников стартапов. Добавьте поле с названием учебного заведения, которое окончил сотрудник, если эта информация известна.

SELECT p.first_name,
       p.last_name,
       e.instituition
       
       
FROM people AS p

LEFT OUTER JOIN education AS e ON p.id = e.person_id
--------------------------------------------------------------------------------------------------------------------------------------------
Задача 12

Для каждой компании найдите количество учебных заведений, которые окончили её сотрудники. Выведите название компании и число уникальных названий учебных заведений. Составьте топ-5 компаний по количеству университетов.

SELECT c.name,
COUNT(DISTINCT(e.instituition))


FROM company AS c

INNER JOIN people AS p ON c.id = p.company_id
INNER JOIN education AS e ON p.id = e.person_id

GROUP BY c.name
ORDER BY COUNT(DISTINCT(e.instituition)) DESC
LIMIT 5
--------------------------------------------------------------------------------------------------------------------------------------------
Задача 13

Составьте список с уникальными названиями закрытых компаний, для которых первый раунд финансирования оказался последним.

SELECT DISTINCT(c.name)

FROM company AS c

LEFT JOIN investment AS i ON c.id = i.company_id
LEFT JOIN funding_round AS f ON c.id = f.company_id
WHERE c.status = 'closed' AND f.is_first_round = 1 AND f.is_last_round =1
--------------------------------------------------------------------------------------------------------------------------------------------
Задача 14

Составьте список уникальных номеров сотрудников, которые работают в компаниях, отобранных в предыдущем задании.

SELECT DISTINCT(p.id) AS d

FROM people AS p

INNER JOIN (SELECT DISTINCT(c.name),
                    c.id AS idd
            FROM company AS c
            LEFT JOIN investment AS i ON c.id = i.company_id
            LEFT JOIN funding_round AS f ON c.id = f.company_id
            WHERE c.status = 'closed' AND f.is_first_round = 1 AND f.is_last_round =1) AS a ON p.company_id = a.idd
--------------------------------------------------------------------------------------------------------------------------------------------
Задача 15

Составьте таблицу, куда войдут уникальные пары с номерами сотрудников из предыдущей задачи и учебным заведением, которое окончил сотрудник.

SELECT person_id, instituition

FROM education 
WHERE person_id IN (SELECT DISTINCT(p.id) AS d

FROM people AS p

INNER JOIN (SELECT DISTINCT(c.name),
                    c.id AS idd
            FROM company AS c
            LEFT JOIN investment AS i ON c.id = i.company_id
            LEFT JOIN funding_round AS f ON c.id = f.company_id
            WHERE c.status = 'closed' AND f.is_first_round = 1 AND f.is_last_round =1) AS a ON p.company_id = a.idd)
GROUP BY  person_id,instituition;
--------------------------------------------------------------------------------------------------------------------------------------------
Задача 16

Посчитайте количество учебных заведений для каждого сотрудника из предыдущего задания.

SELECT person_id, COUNT(instituition)

FROM education 
WHERE person_id IN (SELECT DISTINCT(p.id) AS d

FROM people AS p

INNER JOIN (SELECT DISTINCT(c.name),
                    c.id AS idd
            FROM company AS c
            LEFT JOIN investment AS i ON c.id = i.company_id
            LEFT JOIN funding_round AS f ON c.id = f.company_id
            WHERE c.status = 'closed' AND f.is_first_round = 1 AND f.is_last_round =1) AS a ON p.company_id = a.idd)
GROUP BY  person_id;
--------------------------------------------------------------------------------------------------------------------------------------------
Задача 17

Дополните предыдущий запрос и выведите среднее число учебных заведений (всех, не только уникальных), которые окончили сотрудники разных компаний. Нужно вывести только одну запись, группировка здесь не понадобится.

WITH h AS (            
SELECT person_id, COUNT(instituition) AS j

FROM education 
WHERE person_id IN (SELECT DISTINCT(p.id) AS d

FROM people AS p

INNER JOIN (SELECT DISTINCT(c.name),
                    c.id AS idd
            FROM company AS c
            LEFT JOIN investment AS i ON c.id = i.company_id
            LEFT JOIN funding_round AS f ON c.id = f.company_id
            WHERE c.status = 'closed' AND f.is_first_round = 1 AND f.is_last_round =1) AS a ON p.company_id = a.idd)
GROUP BY  person_id)

SELECT AVG(h.j)

FROM h
--------------------------------------------------------------------------------------------------------------------------------------------
Задача 18

Напишите похожий запрос: выведите среднее число учебных заведений (всех, не только уникальных), которые окончили сотрудники компании Facebook.

WITH h AS (            
SELECT person_id, COUNT(instituition) AS j

FROM education 
WHERE person_id IN (SELECT DISTINCT(p.id) AS d

FROM people AS p

INNER JOIN (SELECT DISTINCT(c.name),
                    c.id AS idd
            FROM company AS c
            LEFT JOIN investment AS i ON c.id = i.company_id
            LEFT JOIN funding_round AS f ON c.id = f.company_id
            WHERE c.name = 'Facebook') AS a ON p.company_id = a.idd)
GROUP BY  person_id)

SELECT AVG(h.j)

FROM h
--------------------------------------------------------------------------------------------------------------------------------------------
Задача 19

Составьте таблицу из полей:
name_of_fund — название фонда;
name_of_company — название компании;
amount — сумма инвестиций, которую привлекла компания в раунде.
В таблицу войдут данные о компаниях, в истории которых было больше шести важных этапов, а раунды финансирования проходили с 2012 по 2013 год включительно.

SELECT f.name AS name_of_fund,
       c.name AS name_of_company,
       fr.raised_amount AS amount

FROM company AS c

LEFT JOIN funding_round AS fr ON c.id = fr.company_id
LEFT JOIN investment AS i ON fr.id = i.funding_round_id
LEFT JOIN fund AS f ON i.fund_id = f.id

WHERE c.milestones > 6 AND EXTRACT (YEAR FROM fr.funded_at ) BETWEEN '2012' AND '2013' AND f.name IS NOT NULL
--------------------------------------------------------------------------------------------------------------------------------------------
Задача 20

Выгрузите таблицу, в которой будут такие поля:
название компании-покупателя;
сумма сделки;
название компании, которую купили;
сумма инвестиций, вложенных в купленную компанию;
доля, которая отображает, во сколько раз сумма покупки превысила сумму вложенных в компанию инвестиций, округлённая до ближайшего целого числа.
Не учитывайте те сделки, в которых сумма покупки равна нулю. Если сумма инвестиций в компанию равна нулю, исключите такую компанию из таблицы.
Отсортируйте таблицу по сумме сделки от большей к меньшей, а затем по названию купленной компании в алфавитном порядке. Ограничьте таблицу первыми десятью записями.

SELECT c.name AS name_buyer,
        ac.price_amount,
        ca.name AS name_sold,
        ca.funding_total,
        ROUND(ac.price_amount/ ca.funding_total)
FROM acquisition AS ac 
LEFT JOIN company AS c ON ac.acquiring_company_id = c.id
LEFT JOIN company AS ca ON ac.acquired_company_id = ca.id
WHERE ac.price_amount <>  0 AND  ca.funding_total <> 0 AND ROUND(ac.price_amount/ ca.funding_total) <> 0
ORDER BY ac.price_amount DESC, ca.name
LIMIT 10;
--------------------------------------------------------------------------------------------------------------------------------------------
Задача 21

Выгрузите таблицу, в которую войдут названия компаний из категории social, получившие финансирование с 2010 по 2013 год включительно. Выведите также номер месяца, в котором проходил раунд финансирования.

SELECT c.name,
       EXTRACT (MONTH FROM fr.funded_at)
FROM company AS c
LEFT JOIN funding_round AS fr ON c.id = fr.company_id
WHERE c.category_code = 'social' AND EXTRACT (YEAR FROM fr.funded_at) BETWEEN '2010' AND '2013'
--------------------------------------------------------------------------------------------------------------------------------------------
Задача 22

Отберите данные по месяцам с 2010 по 2013 год, когда проходили инвестиционные раунды. Сгруппируйте данные по номеру месяца и получите таблицу, в которой будут поля:
номер месяца, в котором проходили раунды;
количество уникальных названий фондов из США, которые инвестировали в этом месяце;
количество компаний, купленных за этот месяц;
общая сумма сделок по покупкам в этом месяце.

WITH
a AS (SELECT EXTRACT(month FROM CAST(funded_at AS date)) as month, 
       COUNT(DISTINCT f.id) AS count_fund
FROM funding_round AS fr
LEFT OUTER JOIN investment AS i ON fr.id=i.funding_round_id 
LEFT OUTER JOIN fund AS f ON i.fund_id=f.id       
 
WHERE EXTRACT(YEAR FROM CAST(funded_at AS date)) BETWEEN '2010' AND '2013'
AND f.country_code = 'USA'
GROUP BY month),              
 
b AS (SELECT EXTRACT(month FROM CAST(acquired_at AS date)) as month,
       COUNT(acquired_company_id) as count_acquired_company,
       SUM(price_amount) as sum_price_amount
FROM acquisition
WHERE EXTRACT(YEAR FROM CAST(acquired_at AS date)) BETWEEN '2010' AND '2013'
GROUP BY month)     
 
SELECT a.month, a.count_fund, b.count_acquired_company, b.sum_price_amount
FROM a
LEFT OUTER JOIN b ON a.month = b.month
ORDER BY month;
--------------------------------------------------------------------------------------------------------------------------------------------
Задача 23

Составьте сводную таблицу и выведите среднюю сумму инвестиций для стран, в которых есть стартапы, зарегистрированные в 2011, 2012 и 2013 годах. Данные за каждый год должны быть в отдельном поле. Отсортируйте таблицу по среднему значению инвестиций за 2011 год от большего к меньшему.

SELECT a.c_code,
       a.f_2011,
       b.f_2012,
       d.f_2013
FROM 
(SELECT AVG(funding_total) AS f_2011,
             country_code as c_code
      FROM company
      WHERE country_code IS NOT NULL AND EXTRACT (YEAR FROM founded_at) = '2011'
      GROUP BY country_code) AS a
INNER JOIN 
(SELECT AVG(funding_total) AS f_2012,
             country_code as c_code
      FROM company
      WHERE country_code IS NOT NULL AND EXTRACT (YEAR FROM founded_at) = '2012'
      GROUP BY country_code) AS b ON a.c_code = b.c_code
INNER JOIN 
(SELECT AVG(funding_total) AS f_2013,
             country_code as c_code
      FROM company
      WHERE country_code IS NOT NULL AND EXTRACT (YEAR FROM founded_at) = '2013'
      GROUP BY country_code) AS d ON b.c_code = d.c_code
ORDER BY a.f_2011 DESC